#!/usr/bin/env bash


if [ ! -f /sbin/md5 ]; then
md5(){
	md5sum "$@" | awk '{print $1}'
}
fi


pat=`pwd | sed -r 's/./?/g'`


#rm -rf /var/tmp/uniq

set -o pipefail

dir="/var/tmp/uniq"

if [ ! -d $dir ]; then mkdir -p $dir; chmod 777 $dir; fi
if [ ! -d ~/db ]; then mkdir ~/db; fi

startdir="`pwd`"

_d=`date "+%Y%m%d_%H%M"`

find -L . -d -type d -not -name 'DUPLES' \
| while read d; do
	cd "$startdir"
	cd "$d"

for i in ?*.???; do break; done
if [ ! -f "$i" ]; then continue; fi
	
	(( ++weight ))
	_w=`printf "%04d" $weight`
	dirhash=`find . -maxdepth 1 -mindepth 1 -type f -name '?*.???' -not -name 'DUPLE*' -ls | grep -iE '[^\.]\.[a-z][^\.]{2}$' | { read x || exit 1; echo "$x"; cat; } | md5` || continue
	if [ -z "$dirhash" ]; then
		echo "Dirhash is empty. Exiting."
		exit 1
	fi		
	list="$dir/$dirhash"
	echo "list: $list" 1>&2
	_pwd=`pwd | sed -r 's/\//\\\\\//g'`
	if [ ! -f "$list" ]; then
		count=`ls -d ?*.??? | grep -vE '^DUPLE' | grep -iE '[^\.]\.[a-z][^\.]{2}$' | wc -l`
		echo -n -e "Processing directory \e[31m$PWD\e[0m "
		printf "(%d files) " "$count"
		
		ls -d ?*.??? | grep -vE '^DUPLE' | grep -iE '[^\.]\.[a-z][^\.]{2}$' | fastsum - | sed -r "s/^([^ ]+) +(.*)/\1 :$_pwd\\/\2/"  | tee "$list" | while read x; do
			if (( ++n % 20 == 0 )); then echo -n "$n"; elif (( n % 2 == 0 )); then echo -n '.'; fi
		done		
		cat "$list" | sed -r "s/[0-9]*:/$_d:/"  >> ~/db/uniq.db
		echo "DONE"
	fi 1>&2		
	cat "$list" | grep -v 'DUPLE' | sed -r "s/[0-9]*:/$_w:/"
done \
| sort | while read x; do
	hash="${x%% *}"
	file="${x#*:}"
	if [ "$hash" = "$last_hash" ]; then
		dir=`dirname "$file"`
		base=`basename "$file"`
		n="${file}"
		n="${n##*/}"
		n="${n%%:ss*}"
		#echo "Duplicate: $n === $last_n" >&2
		
		last_n="$n"
		
#		if [ ! -d "$dir/DUPLES" ]; then
#			mkdir "$dir/DUPLES" || { echo "Cannot create dir $dir/DUPLES. Exiting."; exit 1; }
#		fi		
#		newname="$dir/DUPLES/$base"		
#		if [ -f "$newname" ]; then
#			echo "Destination exists. Skip moving."
#		else
#			mv "$file" "$newname"
#		fi
		
		if [ -n "$original" ]; then
			dn=`dirname "$original"`
			dn0="$dn"
			bn=`basename "$original"`
			dn="${dn#$pat?}"
			echo -e "\nORIG: $dn/\E[1m$bn\E[0m   ($dn0)"
			unset original
		fi
		
		dn=`dirname "$file"`
		bn=`basename "$file"`
		dn="${dn#$pat?}"
		echo -e "DUPL: $dn/\E[1;31m$bn\E[0m"
				
	else
		last_hash="$hash"
		last_file="$file"
		original="$file"
	fi
done



#find -L . -type f -name 'DUPLE.*'










